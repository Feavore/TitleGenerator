URL,Title,Abstract,Introduction
https://arxiv.org/html/2411.06833v1,Learning Interpretable Network Dynamics via Universal Neural Symbolic Regression,"Discovering governing equations of complex network dynamics is a fundamental challenge in contemporary science with rich data, which can uncover the mysterious patterns and mechanisms of the formation and evolution of complex phenomena in various fields and assist in decision-making. In this work, we develop a universal computational tool that can automatically, efficiently, and accurately learn the symbolic changing patterns of complex system states by combining the excellent fitting ability from deep learning and the equation inference ability from pre-trained symbolic regression. We conduct intensive experimental verifications on more than ten representative scenarios from physics, biochemistry, ecology, epidemiology, etc. Results demonstrate the outstanding effectiveness and efficiency of our tool by comparing with the state-of-the-art symbolic regression techniques for network dynamics. The application to real-world systems including global epidemic transmission and pedestrian movements has verified its practical applicability. We believe that our tool can serve as a universal solution to dispel the fog of hidden mechanisms of changes in complex phenomena, advance toward interpretability, and inspire more scientific discoveries.","From the Book of Changes in ancient China to the dialectical thinking in the West, there exists a common philosophical thought that the only constant is change. Undoubtedly, scientists have been striving to discover the laws of changes in complex phenomena, attempting to explain, forecast, and regulate all things [1], such as emergence [2], chaos [3], synchronization [4], and critical phenomena [5]. As a widely accepted modeling, the changing patterns of states from complex systems are generally governed by a set of nonlinear differential equations [6] as \dot{X}(t)=f(X(t),A,t), where X(t)\in\mathbb{R}^{N\times d} is the system states at time t, N and d are the number of system components (nodes) and the state dimension, respectively. A represents the extra information beyond the system states, such as topological interactions among system components. As shown in the above formula, the dynamic behaviors exhibited by complex systems are primarily contingent upon the intricate interdependence between their internal interactions A and dynamics governing equations f [6, 7]. This prompts people to seek reliable methodologies to formulate dynamics models of these complex systems [8, 9]. However, a remarkable challenge arises in this pursuit. In theoretically complete physical systems, laws of changes are delineated by well-discovered foundational principles [10, 11, 12], such as the electromagnetic laws dictating the microscale exchanges among propelled particles. For the majority of complex systems, f is agnostic, and equivalent foundational rules remain incompletely elucidated, such as global epidemic outbreak [13], extreme climate anomalies [14], and extinction of biological populations [15]. Consequently, this vague development has limited the exploration of these complex fields. Fortunately, in the current era of data acquisition gradually becoming easier, the emergence of data-driven technologies has assisted in increasing the frequency with which human experts discover system change patterns [16, 17, 18, 19, 20]. They can provide domain experts with richer and more meaningful inspiration for various fields, accelerating the process of scientific discovery, such as mathematics [21, 22] and physics [23, 24]. Although much excellent work has been developed to reconstruct the symbolic models for low-variate dynamics of complex systems [25], e.g., bivariate shear flow equation [26], trivariate metapopulation epidemic model [27], and up to 9-variate Newton’s law of gravitation [11], inferring governing equations for high-variate network dynamics remains important and challenging. This is mainly because the number of nodes N in network dynamics is usually large, such as the epidemic spreading with transmission areas or individual numbers ranging from tens to billions [13], and d is sometimes multi-dimensional, resulting in too many free variables (N\times d) in the equations and topological interactions with exponential growth, thereby increasing the complexity of inferring symbolic models [15]. At present, several cutting-edge work is attempting to deal with the discovery of governing equations from network dynamics [28, 20]. Two-phase sparse symbolic regression (TPSINDy) [8] simply parameterizes f as a learnable linear combination of pre-defined orthogonal or non-orthogonal elementary function terms. Although its equation inference efficiency is high, the rationality of pre-defined function terms directly affects the inference results, so sufficient and correct domain expert knowledge is usually required [29]. Another group of methods of using graph neural networks (GNN) to parameterize f overcomes excessive expert knowledge [30]. Still, due to the use of genetic programming (GP) to parse neural networks into symbolic equations, it brings the high-cost evolutionary search efficiency issue [10, 14]. Therefore, how to effectively balance expert knowledge and computational costs, while ensuring high computational efficiency, introducing only a small amount or no expert knowledge, lowering the threshold for use, and efficiently discovering governing equations remains a gap. To address the challenges above, we develop a universal neural symbolic regression tool that can automatically, efficiently, and accurately learn the changing patterns of complex system states by combining the excellent fitting ability from deep learning and the equation inference ability from pre-trained symbolic regression. Our analysis of various complex network dynamics scenarios from physics, biochemistry, ecology, epidemiology, etc., indicates that our tool has outstanding effectiveness and efficiency. It can accurately and efficiently discover the governing equations of network dynamics, even in the face of noisy and topologically missing data, and has achieved excellent results in chaotic systems and real-world systems including global epidemic transmission and pedestrian movements. We believe that our tool can serve as a new and general solution to eliminate the fog of hidden mechanisms of changes in complex phenomena from broad fields."
https://arxiv.org/html/2411.05820v1,Guiding Genetic Programming with Graph Neural Networks,"In evolutionary computation, it is commonly assumed that a search algorithm acquires knowledge about a problem instance by sampling solutions from the search space and evaluating them with a fitness function. This is necessarily inefficient because fitness reveals very little about solutions – yet they contain more information that can be potentially exploited. To address this observation in genetic programming, we propose EvoNUDGE, which uses a graph neural network to elicit additional knowledge from symbolic regression problems. The network is queried on the problem before an evolutionary run to produce a library of subprograms, which is subsequently used to seed the initial population and bias the actions of search operators. In an extensive experiment on a large number of problem instances, EvoNUDGE is shown to significantly outperform multiple baselines, including the conventional tree-based genetic programming and the purely neural variant of the method.","The blueprint of evolutionary algorithms assumes that the fitness function is the only means by which the search method is informed about the characteristics of a given problem instance. This design choice is inspired by natural evolution, where a species cannot improve its adaptations otherwise than by spawning randomly diversified offspring, some of which have the chance of being fitter than others. However, there is no reason to keep imposing this information bottleneck if other sources of informative guidance are available, which is relatively common in the practice of metaheuristic search algorithms. For instance, if a problem instance features constraints, one may seed the initial population with candidate solutions that comply with them; if the distributions of some variables happen to be known in advance, one may design search operators that take those distributions into account. In this study, we aim at eliciting problem-specific knowledge also from the candidate solutions themselves and from how they are being evaluated. As per the No Free Lunch Theorem (Wolpert and Macready, 1997), an optimization algorithm informed about the characteristics of a problem instance cannot perform worse on average than an uninformed algorithm. However, gathering useful knowledge about a problem and turning it into information that is ‘actionable’ for the search policy is difficult in domains where the fitness function depends on solutions in a complex way. One domain with this characteristic is genetic programming (GP), where solutions are programs or other symbolic expressions that reveal their characteristics only once executed. Turning the effects of program execution into search guidance is difficult, but can be realized as a learnable mapping. To this aim, we hybridize the GP heuristics with a bespoke graph neural network (GNN) designed to generate graphs of programs. Given an instance of a GP problem represented as a set of input-output examples, the GNN is queried on it to produce a sample of GP subprograms, which is then used to seed the GP population and bias the search operators. We apply this approach to symbolic regression (SR), but it can be easily generalized to other domains. The main contributions of this study are (i) EvoNUDGE, a neuro-evolutionary method for solving SR problems (Sec. 3) and its experimental assessment on a range of SR benchmarks (Sec. 5). The remaining sections comprise problem formulation (Sec. 2) and the review of related works (Sec. 4)."
