URL,Title,Abstract,Introduction
https://arxiv.org/html/2411.03070v1,Extensions of the Cylindrical Algebraic Covering Method for Quantifiers,"The cylindrical algebraic covering method was originally proposed to decide the satisfiability of a set of non-linear real arithmetic constraints. We reformulate and extend the cylindrical algebraic covering method to allow for checking the truth of arbitrary non-linear arithmetic formulas, adding support for both quantifiers and Boolean structure. Furthermore, we also propose a variant to perform quantifier elimination on such formulas. After introducing the algorithm, we elaborate on various extensions, optimizations and heuristics. Finally, we present an experimental evaluation of our implementation and provide a comparison with state-of-the-art SMT solvers and quantifier elimination tools.","Non-linear real arithmetic (NRA) (or real algebra) is the first-order theory whose atoms are polynomial constraints over real variables. We consider three fundamental questions with regard to this theory: (1) Satisfiability of quantifier-free formulas; that is, deciding whether an assignment to the formula’s variables exists such that the formula evaluates to True. (2) Truth of sentences; that is, deciding whether formulas where all variables are quantified are equivalent to True or False. Satisfiability is a special case of this question, as we can existentially quantify all free variables to obtain a sentence. (3) Quantifier elimination in formulas containing both free variables (parameters) and quantified variables; that is, computing an equivalent quantifier-free formula over the parameters. Deciding the truth of sentences is a special case of this question, as we can eliminate all quantifiers. The field of satisfiability-modulo-theories (SMT) solving deals with the first two problems; while checking the satisfiability of quantifier-free non-linear real arithmetic formula has fairly good support, checking the truth of sentences still lacks accessible and efficient tools. The tools for quantifier elimination work a bit differently from SMT tools and might benefit from integrating ideas from SMT solving. Tarski [tarski1951] established the existence of quantifier elimination methods for non-linear real arithmetic, although his method was practically unusable due its non-elementary complexity bounds. Today, the cylindrical algebraic decomposition (CAD) [collins1975] method is the only complete procedure for answering all these questions that is used in practice, despite its doubly exponential worst-case complexity that severely limits the scalability of the method. For the satisfiability problem of conjunctions of constraints, motivated by the application in SMT solving, the cylindrical algebraic covering (CAlC) method [abraham2021] has been developed based on cylindrical algebraic decomposition. Although it retains the doubly exponential complexity, its performance is significantly better in practice [abraham2021, kremer2021calcimpl] while its implementation requires only a simple bookkeeping data structure. Furthermore, it more closely resembles human reasoning and is more amenable to proof production [abraham2021a, abraham2020]. Contribution This paper extends [kremer2023calc] in which we propose a novel reformulation and extension of the cylindrical algebraic covering method that goes beyond the satisfiability problem of conjunctions to allow solving arbitrary quantified formulas as well as quantifier elimination queries. This work elaborates the details of the algorithm, proposes some optimizations and extensions, and provides an evaluation of its implementation. We first consider checking truth where all variables are explicitly quantified, either existentially or universally, in Section 4, and then expand to the quantifier elimination problem in Section 5. The presented method does not rely on a SAT solver to solve a Boolean abstraction; we will elaborate in Section 6 how the Boolean structure is incorporated. Afterwards, we present a divide-and-conquer adaption in Section 7 and a fine-grained proof system for CAlC in Section 8. Finally, we elaborate on heuristics for directing the search in Section 9.1 and evaluate them in Section 9.2, comparing with state-of-the-art tools. We conclude in Section 10."
https://arxiv.org/html/2411.00431v1,Integrating Fuzzy Logic into Deep Symbolic Regression,"Credit card fraud detection is a critical concern for financial institutions, intensified by the rise of contactless payment technologies. While deep learning models offer high accuracy, their lack of explainability poses significant challenges in financial settings. This paper explores the integration of fuzzy logic into Deep Symbolic Regression (DSR) to enhance both performance and explainability in fraud detection. We investigate the effectiveness of different fuzzy logic implications, specifically Łukasiewicz, Gödel, and Product, in handling the complexity and uncertainty of fraud detection datasets. Our analysis suggest that the Łukasiewicz implication achieves the highest F1-score and overall accuracy, while the Product implication offers a favorable balance between performance and explainability. Despite having a performance lower than state-of-the-art (SOTA) models due to information loss in data transformation, our approach provides novelty and insights into into integrating fuzzy logic into DSR for fraud detection, providing a comprehensive comparison between different implications and methods.","Credit card fraud poses a significant and growing challenge for financial institutions, amplified by the advent of innovative technologies such as contactless payment (Europol, 2021). Global losses due to credit card fraud were estimated at $32.39 billion in 2020 and are projected to exceed $40 billion by 2027 (Nilson, S., 2019). The Covid-19 pandemic further accelerated the shift from cash to cashless transactions, intensifying the issue of credit card fraud. To protect customers from fraudulent activities, banks deploy Fraud Detection Systems (FDS) to automatically flag and block suspicious transactions in real-time. Significant advancements in these systems have been achieved through improvements in data quality and the enhanced use and performance of Artificial Intelligence (AI) and Deep Learning (DL) techniques (Cherif et al., 2023). Although DL has demonstrated exceptional performance in classification accuracy (Alarfaj et al., 2022), a major limitation is its lack of explainability. (Mill et al., 2023). This ”black box” nature has hindered the adoption of AI in financial settings, where decisions must be transparent and explainable. Explainable Artificial Intelligence (XAI) offers a potential solution to this problem. Despite the growing interest in XAI, the intersection of fraud detection and XAI remains underexplored. Recent efforts have taken various approaches to bridge this gap. One approach employs XAI methods to interpret Machine Learning (ML) models post-training using techniques such as SHAP (Shapley Additive Explanations) or LIME (Local Interpretable Model-Agnostic Explanations), which have shown only modest improvements in user trust (Ji et al., 2021). Another promising approach involves leveraging Symbolic Regression (SR), which seeks to extract closed-form expressions to describe underlying patterns in the data. These expressions are inherently explainable, resolving transparency issues. To advance SR, Petersen et al. (Petersen et al., 2021) combined SR with Reinforcement Learning (RL), resulting in Deep Symbolic Regression (DSR). DSR employs a recurrent neural network (RNN) trained with deep reinforcement learning, where the reward is task-specific, producing expressions tailored to specific problems. These closed-form expressions show high predictive power and transparency, making them a viable solution to many of the previously mentioned issues. DSR utilizes a library of tokens representing features, constants, or mathematical operators to generate expressions. The DSR framework creates a list of tokens subject to constraints, optimizing them using the RNN based on the reward function. An extension to DSR by Visbeek et al. successfully applied DSR to the fraud detection domain, resulting in Deep Symbolic Classification (DSC) (Visbeek et al., 2023). DSC adapts DSR for classification tasks and uses the F1-score as the reward metric, offering competitive predictive performance with improved explainability. In this paper, we propose extensions to the DSR framework by integrating fuzzy logic. Fuzzy logic, based on the fuzzy set theory by Zadeh (Zadeh, 1965), categorizes reasoning into multiple levels, similar to human reasoning. Unlike strict classifications, fuzzy logic handles uncertainty and vagueness, making it suitable for real-world complexities. For instance, a person is not simply tall or short but can manifest varying degrees of tallness. Fuzzy logic facilitates smooth transitions between such degrees. In DSC, the output is a closed-form mathematical expression (Visbeek et al., 2023). Logical implications provide intuitive explanations, since they naturally represent general rules e.g., If transaction amount is high and receiver balance is low then fraud is the case. These expressions are more intuitive as they mirror human reasoning. Various formulas derive fuzzy implications from fuzzy sets, and fuzzy logic provides a natural medium for expressing the vagueness within this logical structure. For instance, vague expressions such as amount being high might have a varying degree of truth from 0 being false, to 1 being absolutely true. This leads us to the main research question: How can we integrate fuzzy logic into deep symbolic regression for fraud detection? To address our main research question, we elaborate on the following specific sub-research questions: (1) What specific fuzzy logic implications are most effective in enhancing the model’s ability to handle the inherent complexity and uncertainty in fraud detection datasets? (2) What specific choice of fuzzy implication is most effective in DSR? (3) Does the fuzzy logic oriented DSR provide intuitive expressions that are easy to interpret? (4) What is the trade off between the size of the fuzzy logic formula and performance metrics? To assess performance, we compare the proposed framework against current state-of-the-art algorithms as detailed in Table 2. Performance evaluation is conducted using accuracy, which is common in real-life fraud detection, and the F1-score, which addresses the inherent imbalance in credit card fraud data. The popular PaySim dataset is utilized (Alonso Lopez-Rojas et al., 2016), offering a controlled environment for comparison. This synthetically generated dataset contains no privacy concerns, as it lacks personally identifiable information (PII). In addition to performance assessment, the explainability of the rule expressions are evaluated. Furthermore, we employ a Pareto front (Langdon, 1998) to balance predictive performance and explainability, optimizing the complexity of expressions based on the factors and performance, identifying the most suitable expressions for the task."
